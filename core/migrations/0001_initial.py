# Generated by Django 4.1.5 on 2023-02-12 21:06

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=75)),
            ],
            options={
                'verbose_name_plural': 'Cities',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(max_length=75)),
                ('contact_email', models.EmailField(max_length=254)),
                ('contact_subject', models.CharField(max_length=50)),
                ('contact_message', models.TextField()),
                ('inserted_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name_plural': 'Catalog_Contacts',
            },
        ),
        migrations.CreateModel(
            name='Ministry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name_plural': 'Ministries',
            },
        ),
        migrations.CreateModel(
            name='Usa_State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=75)),
            ],
            options={
                'verbose_name_plural': 'Usa_States',
            },
        ),
        migrations.CreateModel(
            name='Org',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('org_city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.city', verbose_name='Cities')),
                ('org_state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.usa_state', verbose_name='Usa_States')),
            ],
            options={
                'verbose_name_plural': 'Orgs',
            },
        ),
        migrations.CreateModel(
            name='MinistryRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('ministry_department', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='core.ministry', verbose_name='Ministries')),
            ],
            options={
                'verbose_name_plural': 'MinistryRoles',
            },
        ),
        migrations.AddField(
            model_name='ministry',
            name='org',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.org', verbose_name='Orgs'),
        ),
        migrations.AddField(
            model_name='city',
            name='selected_state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.usa_state', verbose_name='Usa_States'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('gender', models.CharField(blank=True, choices=[('Female', 'Female'), ('Male', 'Male')], max_length=10, null=True)),
                ('marital_status', models.CharField(blank=True, choices=[('Married', 'Married'), ('Single', 'Single'), ('Divorced', 'Divorced'), ('Widowed', 'Widowed')], max_length=10, null=True)),
                ('tier', models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3')], max_length=10, null=True)),
                ('image_file', models.ImageField(blank=True, default='images/default.jpg', max_length=125, null=True, upload_to='images/')),
                ('street_number', models.IntegerField(default=None)),
                ('street_name', models.CharField(default=None, max_length=50)),
                ('postal_code', models.IntegerField(default=None)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('board_member', models.BooleanField(default=False)),
                ('assigned_elder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.ministryrole', verbose_name='MinistryRoles')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('usr_city', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='core.city', verbose_name='Cities')),
                ('usr_state', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='core.usa_state', verbose_name='Usa_States')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
